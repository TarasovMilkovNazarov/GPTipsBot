<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BotDescription" xml:space="preserve">
    <value>🤖Welcome to the ChatGPT bot! 🚀

Ask ChatGPT - an artificial intelligence based on the GPT-3.5 architecture developed by OpenAI. 💬

- To ask a question to the bot, simply send a text message
- To generate an image, enter the command /image, or use the menu button</value>
  </data>
  <data name="BotName" xml:space="preserve">
    <value>ChatGPT + DALL-E | FREE</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Operation canceled</value>
  </data>
  <data name="ChooseGame" xml:space="preserve">
    <value>Выберите игру</value>
  </data>
  <data name="ChooseLanguagePlease" xml:space="preserve">
    <value>Choose user interface language please</value>
  </data>
  <data name="ContextUpdated" xml:space="preserve">
    <value>Context reset successfully. Start a new dialogue.</value>
  </data>
  <data name="CookiesUpdated" xml:space="preserve">
    <value>Bing image cookies were updated</value>
  </data>
  <data name="DevBotName" xml:space="preserve">
    <value>GPTipDev</value>
  </data>
  <data name="Greeting" xml:space="preserve">
    <value>Hello! How can I help you?</value>
  </data>
  <data name="ImageDescriptionLimitWarning" xml:space="preserve">
    <value>The text description of the image should not exceed {0} characters. Please shorten the description and start again with the /image command.</value>
  </data>
  <data name="InputImageDescriptionText" xml:space="preserve">
    <value>To continue please enter a text description of the image up to {0} characters in length. To quit from image generation mode send /cancel command or press 'Cancel' bots keyboard button.</value>
  </data>
  <data name="LanguageWasSetSuccessfully" xml:space="preserve">
    <value>English was set as interface language</value>
  </data>
  <data name="OnlyMessagesAvailable" xml:space="preserve">
    <value>I'm sorry, but currently only processing of text messages is available. Voice messages and image generation from text are under development.</value>
  </data>
  <data name="OnMaintenance" xml:space="preserve">
    <value>⚙️ Technical maintenance is in progress. Thank you for your understanding.</value>
  </data>
  <data name="PleaseSetLanguage" xml:space="preserve">
    <value>Please choose language for interface</value>
  </data>
  <data name="PleaseWaitMsg" xml:space="preserve">
    <value>⌛️ Please wait, preparing the response...</value>
  </data>
  <data name="Recovered" xml:space="preserve">
    <value>Sorry for being away for a while, but now I'm back in action.</value>
  </data>
  <data name="SendFeedback" xml:space="preserve">
    <value>Enter your message below. We appreciate any feedback.</value>
  </data>
  <data name="ShortDescription" xml:space="preserve">
    <value>A bot integrated with GPT-3.5 + DALL-E. Helps to answer questions and create images based on text 🤖👋 (Author @alanextar)</value>
  </data>
  <data name="ShortDevDescription" xml:space="preserve">
    <value>It's for debugging purpose of the main bot(@GPTipsBot)</value>
  </data>
  <data name="SomethingWentWrong" xml:space="preserve">
    <value>Something went wrong, please try again.</value>
  </data>
  <data name="SomethingWentWrongWithImageService" xml:space="preserve">
    <value>The image generation service is in testing mode. Please try again, starting with the /image command, or wait for the issues to be resolved. We are working on improving the service, thank you for your understanding 🙏</value>
  </data>
  <data name="SwitchProxy" xml:space="preserve">
    <value>Use free proxy: {0}</value>
  </data>
  <data name="Thanks" xml:space="preserve">
    <value>Your feedback has been sent to the author. Thank you for making the bot better!</value>
  </data>
  <data name="TokensLimitExceeded" xml:space="preserve">
    <value>The number of tokens in your message {1} exceeds the limit of {0} tokens. Please shorten your request. Consider that one word approximately contains one token.</value>
  </data>
  <data name="TooManyRequests" xml:space="preserve">
    <value>❗️ Too many requests, please try again after {0} seconds.</value>
  </data>
</root>